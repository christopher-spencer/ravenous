{"ast":null,"code":"const yelpApiKey = process.env.YELP_API_KEY;\nconst Yelp = {\n  search(searchTerm, location, sortBy) {\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${sea}&location=${location}&sort_by=${sortBy}`, {\n      headers: {\n        Authorization: `Bearer ${yelpApiKey}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (jsonResponse.businesses) {\n        return jsonResponse.businesses.map(business => ({\n          id: business.id,\n          imageSrc: business.image_url,\n          name: business.name,\n          address: business.location.address1,\n          city: business.location.city,\n          state: business.location.state,\n          zipCode: business.location.zip_code,\n          category: business.categories[0].title,\n          rating: business.rating,\n          reviewCount: business.review_count\n        }));\n      }\n    });\n  }\n};\nexport default Yelp;","map":{"version":3,"names":["yelpApiKey","process","env","YELP_API_KEY","Yelp","search","searchTerm","location","sortBy","fetch","sea","headers","Authorization","then","response","json","jsonResponse","businesses","map","business","id","imageSrc","image_url","name","address","address1","city","state","zipCode","zip_code","category","categories","title","rating","reviewCount","review_count"],"sources":["/Users/christopherspencer/Source/Repos/ravenous/src/utils/Yelp.js"],"sourcesContent":["const yelpApiKey = process.env.YELP_API_KEY;\n\nconst Yelp = {\n    search(searchTerm, location, sortBy) {\n        return fetch(\n            `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${sea}&location=${location}&sort_by=${sortBy}`,\n            {\n                headers: {\n                    Authorization: `Bearer ${yelpApiKey}`\n                }\n            }\n        )\n        .then((response) => {\n            return response.json();\n        })\n        .then((jsonResponse) => {\n            if (jsonResponse.businesses) {\n                return jsonResponse.businesses.map((business) => ({\n                    id: business.id,\n                    imageSrc: business.image_url,\n                    name: business.name,\n                    address: business.location.address1,\n                    city: business.location.city,\n                    state: business.location.state,\n                    zipCode: business.location.zip_code,\n                    category: business.categories[0].title,\n                    rating: business.rating,\n                    reviewCount: business.review_count\n                }));\n            }\n        });\n    }\n};\n\nexport default Yelp;"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,YAAY;AAE3C,MAAMC,IAAI,GAAG;EACTC,MAAMA,CAACC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IACjC,OAAOC,KAAK,CACP,sFAAqFC,GAAI,aAAYH,QAAS,YAAWC,MAAO,EAAC,EAClI;MACIG,OAAO,EAAE;QACLC,aAAa,EAAG,UAASZ,UAAW;MACxC;IACJ,CACJ,CAAC,CACAa,IAAI,CAAEC,QAAQ,IAAK;MAChB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAEG,YAAY,IAAK;MACpB,IAAIA,YAAY,CAACC,UAAU,EAAE;QACzB,OAAOD,YAAY,CAACC,UAAU,CAACC,GAAG,CAAEC,QAAQ,KAAM;UAC9CC,EAAE,EAAED,QAAQ,CAACC,EAAE;UACfC,QAAQ,EAAEF,QAAQ,CAACG,SAAS;UAC5BC,IAAI,EAAEJ,QAAQ,CAACI,IAAI;UACnBC,OAAO,EAAEL,QAAQ,CAACZ,QAAQ,CAACkB,QAAQ;UACnCC,IAAI,EAAEP,QAAQ,CAACZ,QAAQ,CAACmB,IAAI;UAC5BC,KAAK,EAAER,QAAQ,CAACZ,QAAQ,CAACoB,KAAK;UAC9BC,OAAO,EAAET,QAAQ,CAACZ,QAAQ,CAACsB,QAAQ;UACnCC,QAAQ,EAAEX,QAAQ,CAACY,UAAU,CAAC,CAAC,CAAC,CAACC,KAAK;UACtCC,MAAM,EAAEd,QAAQ,CAACc,MAAM;UACvBC,WAAW,EAAEf,QAAQ,CAACgB;QAC1B,CAAC,CAAC,CAAC;MACP;IACJ,CAAC,CAAC;EACN;AACJ,CAAC;AAED,eAAe/B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}