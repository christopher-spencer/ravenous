{"ast":null,"code":"var _jsxFileName = \"/Users/christopherspencer/Source/Repos/ravenous/src/components/SearchBar/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./SearchBar.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortByOptions = {\n  \"Best Match\": \"best_match\",\n  \"Highest Rated\": \"rating\",\n  \"Most Reviewed\": \"review_count\"\n};\nconst SearchBar = ({\n  searchYelp\n}) => {\n  _s();\n  const [term, setTerm] = useState('');\n  const [location, setLocation] = useState('');\n  const [sortBy, setSortBy] = useState(\"best_match\");\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Event handler to when sortByOptions is clicked\n  const selectSortByOption = sortByOption => {\n    if (sortBy === sortByOption) {\n      return styles.active;\n    }\n    return \"\";\n  };\n\n  // State setter when sortByOptions is selected\n  const handleSortByChange = sortByOption => {\n    setSortBy(sortByOption);\n  };\n\n  // State setter when input term has been filled out\n  const handleTermChange = event => {\n    setTerm(event.target.value);\n  };\n\n  // State setter when location input has been filled out\n  const handleLocationChange = event => {\n    setLocation(event.target.value);\n  };\n\n  // State setter when Enter or Return in keyboard has been pressed\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      searchYelp(term, location, sortBy);\n    }\n  };\n\n  // State setter when submit button has been clicked\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!term.trim() || !location.trim()) {\n      setErrorMessage(\"Fill in the required fields to search\");\n\n      // Reset the error message after 5 seconds\n      setTimeout(() => {\n        setErrorMessage(\"\");\n      }, 3000);\n    } else {\n      setErrorMessage(\"\");\n      searchYelp(term, location, sortBy);\n    }\n  };\n\n  // Adding key to each filter options\n  const renderSortByOptions = () => {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: selectSortByOption(sortByOptionValue) // To toggle .active class in CSS\n        ,\n\n        // Key for Yelp API \n        onClick: () => {\n          handleSortByChange(sortByOptionValue);\n        },\n        children: sortByOption\n      }, sortByOptionValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.SearchBar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.SearchBarSortOptions,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderSortByOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onKeyDown: handleKeyPress,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.SearchBarFields,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"term\",\n          placeholder: \"What are you craving for?\",\n          onChange: handleTermChange,\n          minLength: 1,\n          maxLength: 250\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"location\",\n          placeholder: \"Where?\",\n          onChange: handleLocationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.MessageContainer,\n        children: errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.ErrorMessage,\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.SearchBarSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"1q4B58GkO3I6LtJXQnm9rB68qD8=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","sortByOptions","SearchBar","searchYelp","_s","term","setTerm","location","setLocation","sortBy","setSortBy","errorMessage","setErrorMessage","selectSortByOption","sortByOption","active","handleSortByChange","handleTermChange","event","target","value","handleLocationChange","handleKeyPress","key","preventDefault","handleSubmit","trim","setTimeout","renderSortByOptions","Object","keys","map","sortByOptionValue","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","SearchBarSortOptions","onKeyDown","onSubmit","SearchBarFields","name","placeholder","onChange","minLength","maxLength","MessageContainer","ErrorMessage","SearchBarSubmit","_c","$RefreshReg$"],"sources":["/Users/christopherspencer/Source/Repos/ravenous/src/components/SearchBar/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./SearchBar.module.css\";\n\nconst sortByOptions = {\n  \"Best Match\": \"best_match\",\n  \"Highest Rated\": \"rating\",\n  \"Most Reviewed\": \"review_count\",\n};\n\nconst SearchBar = ({ searchYelp }) => {\n  const [term, setTerm] = useState('');\n  const [location, setLocation] = useState('');\n  const [sortBy, setSortBy] = useState(\"best_match\");\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Event handler to when sortByOptions is clicked\n  const selectSortByOption = (sortByOption) => {\n    if (sortBy === sortByOption) {\n      return styles.active;\n    }\n    return \"\";\n  };\n\n  // State setter when sortByOptions is selected\n  const handleSortByChange = (sortByOption) => {\n    setSortBy(sortByOption);\n  };\n\n  // State setter when input term has been filled out\n  const handleTermChange = (event) => {\n    setTerm(event.target.value);\n  };\n\n  // State setter when location input has been filled out\n  const handleLocationChange = (event) => {\n    setLocation(event.target.value);\n  };\n\n  // State setter when Enter or Return in keyboard has been pressed\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      searchYelp(term, location, sortBy);\n    }\n  };\n\n  // State setter when submit button has been clicked\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!term.trim() || !location.trim()) {\n      setErrorMessage(\"Fill in the required fields to search\");\n\n      // Reset the error message after 5 seconds\n      setTimeout(() => {\n        setErrorMessage(\"\");\n      }, 3000);\n    } else {\n      setErrorMessage(\"\");\n      searchYelp(term, location, sortBy);\n    }\n  };\n\n  // Adding key to each filter options\n  const renderSortByOptions = () => {\n    return Object.keys(sortByOptions).map((sortByOption) => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return (\n        <li\n          className={selectSortByOption(sortByOptionValue)} // To toggle .active class in CSS\n          key={sortByOptionValue} // Key for Yelp API \n          onClick={() => {\n            handleSortByChange(sortByOptionValue)\n          }}\n        >\n          {sortByOption}\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.SearchBar}>\n      {/* Filters for search requests */}\n      <div className={styles.SearchBarSortOptions}>\n        <ul>\n          {renderSortByOptions()}\n        </ul>\n      </div>\n\n      {/* Search bars */}\n      <form\n        onKeyDown={handleKeyPress}\n        onSubmit={handleSubmit}\n      >\n        <div className={styles.SearchBarFields}>\n          <input\n            name=\"term\"\n            placeholder=\"What are you craving for?\"\n            onChange={handleTermChange}\n            minLength={1}\n            maxLength={250}\n          />\n          <input\n            name=\"location\"\n            placeholder=\"Where?\"\n            onChange={handleLocationChange}\n          />\n        </div>\n\n        <div className={ styles.MessageContainer }>\n          {errorMessage && (\n            <p className={styles.ErrorMessage}>{errorMessage}</p>\n          )}\n        </div>\n\n        {/* Submit button */}\n        <div className={styles.SearchBarSubmit}>\n          <button>Search</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}